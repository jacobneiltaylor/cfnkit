{
    "Outputs": {
        "EksClusterRoleArnOutput": {
            "Description": "ARN for IAM role EksClusterRole",
            "Value": {
                "Fn::GetAtt": [
                    "EksClusterRole",
                    "Arn"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EksClusterRoleArnOutput"
                }
            }
        },
        "EksVpcCniServiceAccountRoleArnOutput": {
            "Description": "ARN for IAM role EksVpcCniServiceAccountRole",
            "Value": {
                "Fn::GetAtt": [
                    "EksVpcCniServiceAccountRole",
                    "Arn"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EksVpcCniServiceAccountRoleArnOutput"
                }
            }
        },
        "EksAwsLbControllerServiceAccountRoleArnOutput": {
            "Description": "ARN for IAM role EksAwsLbControllerServiceAccountRole",
            "Value": {
                "Fn::GetAtt": [
                    "EksAwsLbControllerServiceAccountRole",
                    "Arn"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EksAwsLbControllerServiceAccountRoleArnOutput"
                }
            }
        },
        "EksNodeEc2InstanceRoleArnOutput": {
            "Description": "ARN for IAM role EksNodeEc2InstanceRole",
            "Value": {
                "Fn::GetAtt": [
                    "EksNodeEc2InstanceRole",
                    "Arn"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EksNodeEc2InstanceRoleArnOutput"
                }
            }
        },
        "EksClusterOidcProviderArnOutput": {
            "Description": "ARN for IAM OIDC provider EksClusterOidcProvider",
            "Value": {
                "Fn::GetAtt": [
                    "EksClusterOidcProvider",
                    "Arn"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EksClusterOidcProviderArnOutput"
                }
            }
        },
        "EksClusterRefOutput": {
            "Description": "API name of the EKS cluster EksCluster",
            "Value": {
                "Ref": "EksCluster"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EksClusterRefOutput"
                }
            }
        },
        "EksClusterArnOutput": {
            "Description": "ARN for the EKS cluster EksCluster",
            "Value": {
                "Fn::GetAtt": [
                    "EksCluster",
                    "Arn"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EksClusterArnOutput"
                }
            }
        },
        "EksClusterEndpointOutput": {
            "Description": "Endpoint value for the EKS cluster EksCluster",
            "Value": {
                "Fn::GetAtt": [
                    "EksCluster",
                    "Endpoint"
                ]
            }
        },
        "EksClusterOpenIdConnectIssuerUrlOutput": {
            "Description": "OpenIdConnectIssuerUrl value for the EKS cluster EksCluster",
            "Value": {
                "Fn::GetAtt": [
                    "EksCluster",
                    "OpenIdConnectIssuerUrl"
                ]
            }
        },
        "EksClusterManagedNodeGroupArnOutput": {
            "Description": "ARN for EKS Managed node group EksClusterManagedNodeGroup",
            "Value": {
                "Fn::GetAtt": [
                    "EksClusterManagedNodeGroup",
                    "Arn"
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-EksClusterManagedNodeGroupArnOutput"
                }
            }
        }
    },
    "Parameters": {
        "ClusterName": {
            "Type": "String",
            "Description": "Name of the EKS cluster"
        },
        "ClusterVersion": {
            "Type": "String",
            "Description": "The EKS version to use"
        },
        "ClusterSecurityGroupIds": {
            "Type": "List<AWS::EC2::SecurityGroup::Id>",
            "Description": "One or more security groups to associate with the EKS control plane"
        },
        "ClusterEbsCsiAddonVersion": {
            "Type": "String",
            "Description": "Version of the EBS CSI addon to use"
        },
        "ClusterVpcCniAddonVersion": {
            "Type": "String",
            "Description": "Version of the VPC CNI addon to use"
        },
        "ClusterCoreDnsAddonVersion": {
            "Type": "String",
            "Description": "Version of the CoreDNS addon to use"
        },
        "ClusterKubeProxyAddonVersion": {
            "Type": "String",
            "Description": "Version of the kube-proxy addon to use"
        },
        "ClusterPodIdentityAddonVersion": {
            "Type": "String",
            "Description": "Version of the eks-pod-identity-agent addon to use"
        },
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "ID of the Amazon VPC for the cluster"
        },
        "SubnetIds": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "List of subnet IDs in the VPC"
        },
        "NodeGroupName": {
            "Type": "String",
            "Description": "Name of the EKS node group"
        },
        "NodeInstanceTypes": {
            "Type": "List<String>",
            "Description": "EC2 instance types for the worker nodes",
            "Default": "t4g.medium"
        },
        "NodeAmiType": {
            "Type": "String",
            "Description": "AMI type for the worker nodes",
            "Default": "AL2_ARM_64"
        },
        "DesiredCapacity": {
            "Type": "Number",
            "Description": "Desired number of worker nodes",
            "Default": 3,
            "MinValue": 3,
            "MaxValue": 12
        },
        "OidcThumbprint": {
            "Type": "String",
            "Description": "The OIDC thumbprint for the regional EKS endpoint"
        },
        "AwsLbControllerRolePermissionsBoundary": {
            "Type": "String",
            "Description": "ARN to a managed IAM policy that will constrain the AWS load balancer controller role"
        },
        "EksClusterRolePermissionsBoundary": {
            "Type": "String",
            "Description": "ARN to a managed IAM policy that will constrain the EKS cluster role"
        },
        "EksNodeInstanceRolePermissionsBoundary": {
            "Type": "String",
            "Description": "ARN to a managed IAM policy that will constrain the EKS node instance role"
        },
        "AwsVpcCniRolePermissionsBoundary": {
            "Type": "String",
            "Description": "ARN to a managed IAM policy that will constrain the AWS VPC CNI role"
        },
        "AwsEbsCsiRolePermissionsBoundary": {
            "Type": "String",
            "Description": "ARN to a managed IAM policy that will constrain the AWS EBS CSI role"
        }
    },
    "Resources": {
        "EksClusterRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "eks.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
                ],
                "PermissionsBoundary": {
                    "Ref": "EksClusterRolePermissionsBoundary"
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "EksCluster": {
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "ClusterName"
                            },
                            "EksCluster"
                        ]
                    ]
                },
                "Version": {
                    "Ref": "ClusterVersion"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "EksClusterRole",
                        "Arn"
                    ]
                },
                "AccessConfig": {
                    "AuthenticationMode": "API_AND_CONFIG_MAP"
                },
                "KubernetesNetworkConfig": {
                    "IpFamily": "ipv4",
                    "ServiceIpv4Cidr": "192.168.0.0/16"
                },
                "Logging": {
                    "ClusterLogging": {
                        "EnabledTypes": [
                            {
                                "Type": "api"
                            },
                            {
                                "Type": "audit"
                            },
                            {
                                "Type": "authenticator"
                            },
                            {
                                "Type": "controllerManager"
                            },
                            {
                                "Type": "scheduler"
                            }
                        ]
                    }
                },
                "ResourcesVpcConfig": {
                    "SecurityGroupIds": {
                        "Ref": "ClusterSecurityGroupIds"
                    },
                    "SubnetIds": {
                        "Ref": "SubnetIds"
                    },
                    "EndpointPublicAccess": true,
                    "EndpointPrivateAccess": true,
                    "PublicAccessCidrs": [
                        "0.0.0.0/0"
                    ]
                }
            },
            "Type": "AWS::EKS::Cluster"
        },
        "EksClusterOidcProvider": {
            "Properties": {
                "ClientIdList": [
                    "sts.amazonaws.com"
                ],
                "ThumbprintList": [
                    {
                        "Ref": "OidcThumbprint"
                    }
                ],
                "Url": {
                    "Fn::GetAtt": [
                        "EksCluster",
                        "OpenIdConnectIssuerUrl"
                    ]
                }
            },
            "Type": "AWS::IAM::OIDCProvider"
        },
        "EksAwsLbControllerServiceAccountRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Fn::Sub": [
                        "{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"Federated\": \"arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/${Provider}\"}, \"Action\": \"sts:AssumeRoleWithWebIdentity\", \"Condition\": {\"StringEquals\": {\"${Provider}:aud\": \"sts.amazonaws.com\", \"${Provider}:sub\": \"system:serviceaccount:${Namespace}:${ServiceAccount}\"}}}]}",
                        {
                            "Provider": {
                                "Fn::Select": [
                                    1,
                                    {
                                        "Fn::Split": [
                                            "//",
                                            {
                                                "Fn::GetAtt": [
                                                    "EksCluster",
                                                    "OpenIdConnectIssuerUrl"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            "Namespace": "kube-system",
                            "ServiceAccount": "aws-load-balancer-controller-service-account"
                        }
                    ]
                },
                "PermissionsBoundary": {
                    "Ref": "AwsLbControllerRolePermissionsBoundary"
                },
                "Policies": [
                    {
                        "PolicyName": "EksAwsLbControllerServiceAccountRoleAccessPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:CreateServiceLinkedRole"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "StringEquals": {
                                            "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DescribeAccountAttributes",
                                        "ec2:DescribeAddresses",
                                        "ec2:DescribeAvailabilityZones",
                                        "ec2:DescribeInternetGateways",
                                        "ec2:DescribeVpcs",
                                        "ec2:DescribeVpcPeeringConnections",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeSecurityGroups",
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DescribeTags",
                                        "ec2:GetCoipPoolUsage",
                                        "ec2:DescribeCoipPools",
                                        "elasticloadbalancing:DescribeLoadBalancers",
                                        "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                        "elasticloadbalancing:DescribeListeners",
                                        "elasticloadbalancing:DescribeListenerCertificates",
                                        "elasticloadbalancing:DescribeSSLPolicies",
                                        "elasticloadbalancing:DescribeRules",
                                        "elasticloadbalancing:DescribeTargetGroups",
                                        "elasticloadbalancing:DescribeTargetGroupAttributes",
                                        "elasticloadbalancing:DescribeTargetHealth",
                                        "elasticloadbalancing:DescribeTags"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-idp:DescribeUserPoolClient",
                                        "acm:ListCertificates",
                                        "acm:DescribeCertificate",
                                        "iam:ListServerCertificates",
                                        "iam:GetServerCertificate",
                                        "waf-regional:GetWebACL",
                                        "waf-regional:GetWebACLForResource",
                                        "waf-regional:AssociateWebACL",
                                        "waf-regional:DisassociateWebACL",
                                        "wafv2:GetWebACL",
                                        "wafv2:GetWebACLForResource",
                                        "wafv2:AssociateWebACL",
                                        "wafv2:DisassociateWebACL",
                                        "shield:GetSubscriptionState",
                                        "shield:DescribeProtection",
                                        "shield:CreateProtection",
                                        "shield:DeleteProtection"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:AuthorizeSecurityGroupIngress",
                                        "ec2:RevokeSecurityGroupIngress"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateSecurityGroup"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateTags"
                                    ],
                                    "Resource": "arn:aws:ec2:*:*:security-group/*",
                                    "Condition": {
                                        "StringEquals": {
                                            "ec2:CreateAction": "CreateSecurityGroup"
                                        },
                                        "Null": {
                                            "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateTags",
                                        "ec2:DeleteTags"
                                    ],
                                    "Resource": "arn:aws:ec2:*:*:security-group/*",
                                    "Condition": {
                                        "Null": {
                                            "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                                            "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:AuthorizeSecurityGroupIngress",
                                        "ec2:RevokeSecurityGroupIngress",
                                        "ec2:DeleteSecurityGroup"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "Null": {
                                            "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:CreateLoadBalancer",
                                        "elasticloadbalancing:CreateTargetGroup"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "Null": {
                                            "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:CreateListener",
                                        "elasticloadbalancing:DeleteListener",
                                        "elasticloadbalancing:CreateRule",
                                        "elasticloadbalancing:DeleteRule"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:AddTags",
                                        "elasticloadbalancing:RemoveTags"
                                    ],
                                    "Resource": [
                                        "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                                        "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                                        "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*"
                                    ],
                                    "Condition": {
                                        "Null": {
                                            "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                                            "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:AddTags",
                                        "elasticloadbalancing:RemoveTags"
                                    ],
                                    "Resource": [
                                        "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*",
                                        "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                                        "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                                        "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:ModifyLoadBalancerAttributes",
                                        "elasticloadbalancing:SetIpAddressType",
                                        "elasticloadbalancing:SetSecurityGroups",
                                        "elasticloadbalancing:SetSubnets",
                                        "elasticloadbalancing:DeleteLoadBalancer",
                                        "elasticloadbalancing:ModifyTargetGroup",
                                        "elasticloadbalancing:ModifyTargetGroupAttributes",
                                        "elasticloadbalancing:DeleteTargetGroup"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "Null": {
                                            "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:AddTags"
                                    ],
                                    "Resource": [
                                        "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                                        "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                                        "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "elasticloadbalancing:CreateAction": [
                                                "CreateTargetGroup",
                                                "CreateLoadBalancer"
                                            ]
                                        },
                                        "Null": {
                                            "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:RegisterTargets",
                                        "elasticloadbalancing:DeregisterTargets"
                                    ],
                                    "Resource": "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:SetWebAcl",
                                        "elasticloadbalancing:ModifyListener",
                                        "elasticloadbalancing:AddListenerCertificates",
                                        "elasticloadbalancing:RemoveListenerCertificates",
                                        "elasticloadbalancing:ModifyRule"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "EksNodeEc2InstanceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy"
                ],
                "PermissionsBoundary": {
                    "Ref": "EksNodeInstanceRolePermissionsBoundary"
                },
                "Policies": [
                    {
                        "PolicyName": "EksNodeEc2InstanceRoleAccessPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:AssignIpv6Addresses",
                                        "ec2:AssignPrivateIpAddresses",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DeleteNetworkInterface",
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeTags",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DescribeInstanceTypes",
                                        "ec2:DetachNetworkInterface",
                                        "ec2:ModifyNetworkInterfaceAttribute",
                                        "ec2:UnassignPrivateIpAddresses"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateTags"
                                    ],
                                    "Resource": [
                                        "arn:aws:ec2:*:*:network-interface/*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "EksEbsCsiServiceAccountRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Fn::Sub": [
                        "{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"Federated\": \"arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/${Provider}\"}, \"Action\": \"sts:AssumeRoleWithWebIdentity\", \"Condition\": {\"StringEquals\": {\"${Provider}:aud\": \"sts.amazonaws.com\", \"${Provider}:sub\": \"system:serviceaccount:${Namespace}:${ServiceAccount}\"}}}]}",
                        {
                            "Provider": {
                                "Fn::Select": [
                                    1,
                                    {
                                        "Fn::Split": [
                                            "//",
                                            {
                                                "Fn::GetAtt": [
                                                    "EksCluster",
                                                    "OpenIdConnectIssuerUrl"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            "Namespace": "kube-system",
                            "ServiceAccount": "ebs-csi-controller-sa"
                        }
                    ]
                },
                "PermissionsBoundary": {
                    "Ref": "AwsEbsCsiRolePermissionsBoundary"
                },
                "Policies": [
                    {
                        "PolicyName": "EksEbsCsiServiceAccountRoleAccessPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateSnapshot",
                                        "ec2:AttachVolume",
                                        "ec2:DetachVolume",
                                        "ec2:ModifyVolume",
                                        "ec2:DescribeAvailabilityZones",
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeSnapshots",
                                        "ec2:DescribeTags",
                                        "ec2:DescribeVolumes",
                                        "ec2:DescribeVolumesModifications"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateTags"
                                    ],
                                    "Resource": [
                                        "arn:aws:ec2:*:*:volume/*",
                                        "arn:aws:ec2:*:*:snapshot/*"
                                    ],
                                    "Condition": {
                                        "StringEquals": {
                                            "ec2:CreateAction": [
                                                "CreateVolume",
                                                "CreateSnapshot"
                                            ]
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DeleteTags"
                                    ],
                                    "Resource": [
                                        "arn:aws:ec2:*:*:volume/*",
                                        "arn:aws:ec2:*:*:snapshot/*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateVolume"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "StringLike": {
                                            "aws:RequestTag/ebs.csi.aws.com/cluster": "true"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateVolume"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "StringLike": {
                                            "aws:RequestTag/CSIVolumeName": "*"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DeleteVolume"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "StringLike": {
                                            "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DeleteVolume"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "StringLike": {
                                            "ec2:ResourceTag/CSIVolumeName": "*"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DeleteVolume"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "StringLike": {
                                            "ec2:ResourceTag/kubernetes.io/created-for/pvc/name": "*"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DeleteSnapshot"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "StringLike": {
                                            "ec2:ResourceTag/CSIVolumeSnapshotName": "*"
                                        }
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:DeleteSnapshot"
                                    ],
                                    "Resource": "*",
                                    "Condition": {
                                        "StringLike": {
                                            "ec2:ResourceTag/ebs.csi.aws.com/cluster": "true"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "EksVpcCniServiceAccountRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Fn::Sub": [
                        "{\"Version\": \"2012-10-17\", \"Statement\": [{\"Effect\": \"Allow\", \"Principal\": {\"Federated\": \"arn:${AWS::Partition}:iam::${AWS::AccountId}:oidc-provider/${Provider}\"}, \"Action\": \"sts:AssumeRoleWithWebIdentity\", \"Condition\": {\"StringEquals\": {\"${Provider}:aud\": \"sts.amazonaws.com\", \"${Provider}:sub\": \"system:serviceaccount:${Namespace}:${ServiceAccount}\"}}}]}",
                        {
                            "Provider": {
                                "Fn::Select": [
                                    1,
                                    {
                                        "Fn::Split": [
                                            "//",
                                            {
                                                "Fn::GetAtt": [
                                                    "EksCluster",
                                                    "OpenIdConnectIssuerUrl"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            "Namespace": "kube-system",
                            "ServiceAccount": "aws-node"
                        }
                    ]
                },
                "PermissionsBoundary": {
                    "Ref": "AwsVpcCniRolePermissionsBoundary"
                },
                "Policies": [
                    {
                        "PolicyName": "EksVpcCniServiceAccountRoleAccessPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:AssignIpv6Addresses",
                                        "ec2:AssignPrivateIpAddresses",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DeleteNetworkInterface",
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeTags",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DescribeInstanceTypes",
                                        "ec2:DetachNetworkInterface",
                                        "ec2:ModifyNetworkInterfaceAttribute",
                                        "ec2:UnassignPrivateIpAddresses"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:CreateTags"
                                    ],
                                    "Resource": [
                                        "arn:aws:ec2:*:*:network-interface/*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "EksEbsCsiAddon": {
            "Properties": {
                "AddonName": "aws-ebs-csi-driver",
                "ClusterName": {
                    "Ref": "EksCluster"
                },
                "AddonVersion": {
                    "Ref": "ClusterEbsCsiAddonVersion"
                },
                "ServiceAccountRoleArn": {
                    "Fn::GetAtt": [
                        "EksEbsCsiServiceAccountRole",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::EKS::Addon"
        },
        "EksVpcCniAddon": {
            "Properties": {
                "AddonName": "vpc-cni",
                "ClusterName": {
                    "Ref": "EksCluster"
                },
                "AddonVersion": {
                    "Ref": "ClusterVpcCniAddonVersion"
                },
                "ServiceAccountRoleArn": {
                    "Fn::GetAtt": [
                        "EksVpcCniServiceAccountRole",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::EKS::Addon"
        },
        "EksCoreDnsAddon": {
            "Properties": {
                "AddonName": "coredns",
                "ClusterName": {
                    "Ref": "EksCluster"
                },
                "AddonVersion": {
                    "Ref": "ClusterCoreDnsAddonVersion"
                }
            },
            "Type": "AWS::EKS::Addon"
        },
        "EksKubeProxyAddon": {
            "Properties": {
                "AddonName": "kube-proxy",
                "ClusterName": {
                    "Ref": "EksCluster"
                },
                "AddonVersion": {
                    "Ref": "ClusterKubeProxyAddonVersion"
                }
            },
            "Type": "AWS::EKS::Addon"
        },
        "EksPodIdentityAddon": {
            "Properties": {
                "AddonName": "eks-pod-identity-agent",
                "ClusterName": {
                    "Ref": "EksCluster"
                },
                "AddonVersion": {
                    "Ref": "ClusterPodIdentityAddonVersion"
                }
            },
            "Type": "AWS::EKS::Addon"
        },
        "EksClusterManagedNodeGroup": {
            "Properties": {
                "AmiType": {
                    "Ref": "NodeAmiType"
                },
                "ClusterName": {
                    "Ref": "EksCluster"
                },
                "NodegroupName": {
                    "Ref": "NodeGroupName"
                },
                "NodeRole": {
                    "Fn::GetAtt": [
                        "EksNodeEc2InstanceRole",
                        "Arn"
                    ]
                },
                "Subnets": {
                    "Ref": "SubnetIds"
                },
                "InstanceTypes": {
                    "Ref": "NodeInstanceTypes"
                },
                "ScalingConfig": {
                    "DesiredSize": {
                        "Ref": "DesiredCapacity"
                    },
                    "MinSize": 1,
                    "MaxSize": 3
                }
            },
            "Type": "AWS::EKS::Nodegroup"
        }
    }
}